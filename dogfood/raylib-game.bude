### BEGIN RAYLIB ###

pack Color def
    r -> u8
    g -> u8
    b -> u8
    a -> u8
end

var RAYWHITE -> Color
    RED -> Color
end

245u8 245u8 245u8 255u8 Color <- RAYWHITE
255u8 0u8 0u8 255u8 Color <- RED

import raylib def
    func s32 s32 ptr InitWindow end
    func CloseWindow end
    func WindowShouldClose -> s8 end  # TODO: bool type
    func BeginDrawing end
    func EndDrawing end
    func Color ClearBackground end
    func ptr s32 s32 s32 Color DrawText end
    func ptr s32 MeasureText -> s32 end
end

### END RAYLIB ###


func string to-cstr -> ptr def
     decomp pop
end


var screen-width  -> s32
    screen-height -> s32
    screen-title  -> string
end

1200s32 <- screen-width
800s32  <- screen-height

"Raylib Game in Bude" <- screen-title

screen-width screen-height screen-title decomp pop InitWindow

while WindowShouldClose not do
    BeginDrawing
    RAYWHITE ClearBackground

    var text -> ptr
        font-size -> s32
    end
    "Hello, Raylib!" to-cstr <- text
    80s32 <- font-size

    text
    screen-width text font-size MeasureText - 2s32 /  # x position
    screen-height 2s32 /  # y position
    font-size
    RED
    DrawText

    EndDrawing
end

CloseWindow
